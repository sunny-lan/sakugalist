Design goals

 - Separate VideoViewer component. This should be able to work without the server, excepting bookmark saving
    - frame step
    - loop
    - jump to bookmarks
    - should be able to view videos from a variety of sources, including web urls and local files
 - Searchable metadata (animator, show, episode)
 - Bookmarks to times in videos, with metadata
 - How to view gifs?


How to implement it
server responsibility:
    save video metadata.
    allowing searching of metadata.
    serve video from local disk.
    serve videoviewer files


client responsilibity:
    videoviewer responsilibity:
        display video and bookmarks
        be able to seek to a time, and set loop start and end time
        edit metadata
    videoviewercontroller responbility:
        supply video metadata and video URL to videoviewer.
        supply save video metadata function to videoviewer
    videosearch responsibility:
        display list of available videos, giving links to them
        have search ability
    videosearchcontroller responsiblity:
        supply list of available videos to videoselector, along with all metadata

videosearch details
    expected intents
        filter bookmark by tag, in order to randomly pick one
        filter video, in order to randomly pick one
        find specific video
        find specific bookmark
    wanted behavior:
        1. search for videos
            - include bookmark metadata?
            - show bookmarks in search results? filtered?
        2. search for bookmarks
            - include video metadata?
            - two display methods: just show bookmark list, or show videos with matching bookmarks underneath
        ----
        sort by (search for): video/bookmark
        filter bookmark results?
        include bookmark in search?

        simplify: only display in video->bookmark format
        allow to not





Data types:
time: stored in seconds
video: a video URI+ a source locator (local file, web file, etc)
video id: server assigned unique ID to a video
video metadata: extra info about video: author, bookmarks, etc
video url: actual url that can be displayed in <video> html5 player

serverhook details
    - recieve video url from GET params
    - question: should localstorage and server be separate?
    - decision:
        unified metadata space. only video url is passed
        - tries to access all metadata sources
        - tries to save all metadata sources


videoviewer details
    decision: whether to populate or return root?
        return root seems like better idea

    overall data flow:
    metadata: editor -> callback -> videoviewer -> server/localstorage -> successcallback -> |setmetadata| -> update all ui


    viewer logic:

    |seek|->set hash->onhashchange->set video.time->|time updated event|->update all ui:
        selected bookmark -> bookmarkeditor
        status bar

    |set viewing state|->update all ui
        -> update video
        -> status bar

    status bar:
        change time->seek
        needs to know a bunch of important info, such as fps, current time etc


     possibly merge status bar with video


server details
    save manager: save(video)
